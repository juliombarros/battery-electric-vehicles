getwd()
anfavea_fls <- list.files(file.path('~/input'),
pattern = 'siteauto',
full.names = T)
anfavea_fls <- list.files(file.path('./input'),
pattern = 'siteauto',
full.names = T)
anfavea_fls <- list.files(file.path('/input'),
pattern = 'siteauto',
full.names = T)
# ------------------------------------------------------------------------
# Projects 2050 fleet based on ENE scenario
#
#
# ------------------------------------------------------------------------
# input -------------------------------------------------------------------
load(file.path('./tmp', '3_compute_fleet.rda'))
# Plot Directory
plot.dir <- './output/plots'
# Inertial Growth Scenario ------------------------------------------------
# Computing shares of sales
regis_fleet_shares <- regis_fleet %>%
mutate(across(starts_with('Registration'), ~ .x / Registration, .names = 'Shr{col}'))
# ------------------------------------------------------------------------
# Master file: Projects BEV fleet (2050)
#
# Julio Barros
# 25/07/2023
# ------------------------------------------------------------------------
# preamble ----------------------------------------------------------------
rm(list = ls())
gc()
# packages ----------------------------------------------------------------
library(tidyverse)
library(readxl)
library(zoo)
library("ggsci")
library("ggthemes")
source('./code/1_anfavea_registration_yearly_files.R')
source('./code/2_anfavea_registration.R')
source('./code/3_compute_fleet.R')
source('./code/4_projection_inertial.R')
source('./code/5_projection_optimist.R')
source('./code/6_projection_biofuels.R')
source('./code/7_ancillary_graphs.R')
# ------------------------------------------------------------------------
# Master file: Projects BEV fleet (2050)
#
# Julio Barros
# 25/07/2023
# ------------------------------------------------------------------------
# preamble ----------------------------------------------------------------
rm(list = ls())
gc()
# packages ----------------------------------------------------------------
library(tidyverse)
library(readxl)
library(zoo)
library("ggsci")
library("ggthemes")
# run files ---------------------------------------------------------------
source('./code/1_anfavea_registration_yearly_files.R')
source('./code/2_anfavea_registration.R')
source('./code/3_compute_fleet.R')
source('./code/4_projection_inertial.R')
source('./code/5_projection_optimist.R')
source('./code/6_projection_biofuels.R')
source('./code/7_ancillary_graphs.R')
# ------------------------------------------------------------------------
# Master file: Projects BEV fleet (2050)
#
# Julio Barros
# 25/07/2023
# ------------------------------------------------------------------------
# preamble ----------------------------------------------------------------
rm(list = ls())
gc()
# packages ----------------------------------------------------------------
library(tidyverse)
library(readxl)
library(zoo)
library("ggsci")
library("ggthemes")
# run files ---------------------------------------------------------------
source('./code/1_anfavea_registration_yearly_files.R')
source('./code/2_anfavea_registration.R')
source('./code/3_compute_fleet.R')
source('./code/4_projection_inertial.R')
source('./code/5_projection_optimist.R')
source('./code/6_projection_biofuels.R')
source('./code/7_ancillary_graphs.R')
# ------------------------------------------------------------------------
# Projects 2050 fleet based on base scenario (centro clima)
#
#
# ------------------------------------------------------------------------
# input -------------------------------------------------------------------
load(file.path('./tmp', '3_compute_fleet.rda'))
# Plot Directory
plot.dir <- './output/plots'
# Inertial Growth Scenario ------------------------------------------------
# Computing shares of sales
regis_fleet_shares <- regis_fleet %>%
mutate(across(starts_with('Registration'), ~ .x / Registration, .names = 'Shr{col}'))
# Sales Expansion Rate (year over year):
sales_growth <- 1.044
# 2023 - 2030
regis_fleet_23_30 <-  regis_fleet_shares %>%
add_row(Year = 2023:2030) %>%
filter(Year >= 2022) %>%
mutate(Registration = accumulate(Registration, ~ .x*sales_growth)) %>%
mutate(ShrRegistrationGasoline = case_when(Year <  2030 ~ accumulate(ShrRegistrationGasoline, ~.x -0.0031),
TRUE ~ 0)) %>%
mutate(ShrRegistrationFlex  = accumulate(ShrRegistrationFlex, ~.x -0.035)) %>%
mutate(ShrRegistrationDiesel  = accumulate(ShrRegistrationDiesel, ~.x - 0.006)) %>%
mutate(ShrRegistrationHybrid  = accumulate(ShrRegistrationHybrid, ~.x + 0.04)) %>%
mutate(ShrRegistrationBEV     = accumulate(ShrRegistrationBEV, ~.x + 0.004)) %>%
mutate(ShrRegistrationEthanol = replace_na(ShrRegistrationEthanol, 0)) %>%
filter(Year >= 2023)
# 2030 - 2045
regis_fleet_31_45 <-  regis_fleet_23_30 %>%
add_row(Year = 2031:2045) %>%
filter(Year >= 2030) %>%
mutate(Registration = accumulate(Registration, ~ .x*sales_growth)) %>%
mutate(ShrRegistrationGasoline  = replace_na(ShrRegistrationGasoline, 0)) %>%
mutate(ShrRegistrationFlex      = case_when( Year < 2045 ~ accumulate(ShrRegistrationFlex, ~.x -0.037),
TRUE ~ 0)) %>%
mutate(ShrRegistrationDiesel    = case_when( Year < 2045 ~ accumulate(ShrRegistrationDiesel, ~.x - 0.0046),
TRUE ~0 )) %>%
mutate(ShrRegistrationHybrid    = accumulate(ShrRegistrationHybrid, ~.x + 0.037)) %>%
mutate(ShrRegistrationBEV       = accumulate(ShrRegistrationBEV, ~.x + 0.0046)) %>%
mutate(ShrRegistrationEthanol   = replace_na(ShrRegistrationEthanol, 0)) %>%
filter(Year >= 2031)
# 2045 - 2050
regis_fleet_46_50 <-  regis_fleet_31_45 %>%
add_row(Year = 2046:2050) %>%
filter(Year >= 2045) %>%
mutate(Registration = accumulate(Registration, ~ .x*sales_growth)) %>%
mutate(ShrRegistrationHybrid = accumulate(ShrRegistrationHybrid, ~.x - 0.016)) %>%
mutate(ShrRegistrationBEV = accumulate(ShrRegistrationBEV, ~.x + 0.016)) %>%
mutate(across(c(ShrRegistrationGasoline,
ShrRegistrationEthanol,
ShrRegistrationFlex,
ShrRegistrationDiesel), ~ replace_na(.x, 0))) %>%
filter(Year >= 2046)
# Bind all into one dataframe:
# 2023 - 2050, computing registry:
regis_fleet_23_50 <- bind_rows(regis_fleet_23_30,
regis_fleet_31_45,
regis_fleet_46_50) %>%
mutate(RegistrationGasoline = ShrRegistrationGasoline * Registration,
RegistrationEthanol  = ShrRegistrationEthanol * Registration,
RegistrationFlex     = ShrRegistrationFlex    * Registration,
RegistrationDiesel   = ShrRegistrationDiesel  * Registration,
RegistrationHybrid   = ShrRegistrationHybrid  * Registration,
RegistrationBEV      = ShrRegistrationBEV     * Registration)
# 1957 - 2050
regis_fleet_57_50 <- bind_rows(regis_fleet, regis_fleet_23_50)
# Compute Fleet -----------------------------------------------------------
# compute exit function
sucateamento_otto <- function(yr, registration) {
age  <- max(yr) - yr
exit <- exp(-exp(1.798-0.137*age))
shr_available <- 1 - exit
shr_available * registration
}
sucateamento_diesel <- function(yr, registration) {
age  <- max(yr) - yr
exit <- (1/(1 + exp(0.17*(age - 15.3)))) + (1/(1+exp(0.17*(age + 15.3))))
shr_available <- 1 - exit
shr_available * registration
}
# Yearly dataframes in a list:
regis_ls <- map(.x = regis_fleet_57_50$Year,
~ regis_fleet_57_50 %>% filter(Year <= .x))
# Pass exit function to compute each year's contribution to net of fleet
yearly_net <- map(.x = regis_ls,
~ .x %>% mutate( FleetGasoline = sucateamento_otto(Year, RegistrationGasoline),
FleetEthanol  = sucateamento_otto(Year, RegistrationEthanol),
FleetFlex     = sucateamento_otto(Year, RegistrationFlex),
FleetDiesel   = sucateamento_diesel(Year, RegistrationDiesel),
FleetHybrid   = sucateamento_otto(Year, RegistrationHybrid),
FleetBEV      = sucateamento_otto(Year, RegistrationBEV)))
# Summation for each year
yearly_fleet <- map_df(.x = yearly_net,
~ .x %>%
mutate(across(starts_with("Fleet"), ~ sum(.x))) %>%
filter(Year == max(Year)) %>%
select(c(Year, starts_with("Fleet")))) %>%
mutate(ModeledFleet = rowSums(select(.,starts_with("Fleet"))))
View(yearly_fleet)
View(yearly_net)
View(yearly_fleet)
# save fleet data
write_excel_csv2(yearly_fleet, file = file.path('.', 'cenario_base.csv'))
# save fleet data
write_excel_csv2(yearly_fleet, file = file.path('./output', 'cenario_base.csv'))
# ------------------------------------------------------------------------
# Master file: Projects BEV fleet (2050)
#
# Julio Barros
# 25/07/2023
# ------------------------------------------------------------------------
# preamble ----------------------------------------------------------------
rm(list = ls())
gc()
# packages ----------------------------------------------------------------
library(tidyverse)
library(readxl)
library(zoo)
library("ggsci")
library("ggthemes")
# run files ---------------------------------------------------------------
source('./code/1_anfavea_registration_yearly_files.R')
source('./code/2_anfavea_registration.R')
source('./code/3_compute_fleet.R')
source('./code/4_projection_inertial.R')
source('./code/5_projection_optimist.R')
source('./code/6_projection_biofuels.R')
source('./code/7_ancillary_graphs.R')
wd()
getwd()
# preamble ----------------------------------------------------------------
rm(list = ls())
gc()
# packages ----------------------------------------------------------------
library(tidyverse)
library(readxl)
library(zoo)
library("ggsci")
library("ggthemes")
# run files ---------------------------------------------------------------
source('./code/1_anfavea_registration_yearly_files.R')
source('./code/2_anfavea_registration.R')
source('./code/3_compute_fleet.R')
source('./code/4_projection_inertial.R')
source('./code/5_projection_optimist.R')
source('./code/6_projection_biofuels.R')
source('./code/7_ancillary_graphs.R')
rm(list = ls())
gc()
# ------------------------------------------------------------------------
# Master file: Projects BEV fleet (2050)
#
# Julio Barros
# 25/07/2023
# ------------------------------------------------------------------------
# packages ----------------------------------------------------------------
library(tidyverse)
library(readxl)
library(zoo)
library("ggsci")
library("ggthemes")
# run files ---------------------------------------------------------------
source('./code/1_anfavea_registration_yearly_files.R')
source('./code/2_anfavea_registration.R')
source('./code/3_compute_fleet.R')
source('./code/4_projection_inertial.R')
source('./code/5_projection_optimist.R')
source('./code/6_projection_biofuels.R')
source('./code/7_ancillary_graphs.R')
# finish ------------------------------------------------------------------
rm(list = ls())
gc()
# ------------------------------------------------------------------------
# Master file: Projects BEV fleet (2050)
#
# Julio Barros
# 25/07/2023
# ------------------------------------------------------------------------
# packages ----------------------------------------------------------------
library(tidyverse)
library(readxl)
library(zoo)
library("ggsci")
library("ggthemes")
# run files ---------------------------------------------------------------
source('./code/1_anfavea_registration_yearly_files.R')
source('./code/2_anfavea_registration.R')
source('./code/3_compute_fleet.R')
source('./code/4_projection_inertial.R')
source('./code/5_projection_optimist.R')
source('./code/6_projection_biofuels.R')
source('./code/7_ancillary_graphs.R')
# finish ------------------------------------------------------------------
rm(list = ls())
gc()
library(tidyverse)
library(readxl)
library(zoo)
library("ggsci")
library("ggthemes")
library(rgee)
ee_Initialize()
ee_install_upgrade()
library(tidyverse)
library(readxl)
library(zoo)
library("ggsci")
library("ggthemes")
library(rgee)
ee_Initialize()
ee_Initialize()
install.packages(c("remotes", "googledrive"))
remotes::install_github("r-spatial/rgee")
library(rgee)
# Get the username
HOME <- Sys.getenv("HOME")
# 1. Install miniconda
reticulate::install_miniconda()
# 2. Install Google Cloud SDK
system("curl -sSL https://sdk.cloud.google.com | bash")
# 3 Set global parameters
Sys.setenv("RETICULATE_PYTHON" = sprintf("%s/.local/share/r-miniconda/bin/python3", HOME))
Sys.setenv("EARTHENGINE_GCLOUD" = sprintf("%s/google-cloud-sdk/bin/", HOME))
# 4 Install rgee Python dependencies
ee_install()
rm(rs = list())
rm(list = rs())
rm(list = ls())
quit()
